---

- name: "Install cli tools"
  hosts: "all"
  tags:
    - "cli"
  vars:
    config_version: "v1.3.4"  # x-release-please-version
    tools_folder: "/usr/local/opt/"
    tools:
      - name: "zellij"
        version: "v0.42.2"
        github_repo: "https://github.com/zellij-org/zellij"
        artifact_name: "zellij-x86_64-unknown-linux-musl.tar.gz"
      - name: "nvim"
        version: "v0.11.2"
        github_repo: "https://github.com/neovim/neovim"
        artifact_name: "nvim-linux-x86_64.tar.gz"
        bin_path: "nvim/nvim-linux64/bin/nvim"
      - name: "helix"
        version: "25.01.1"
        github_repo: "https://github.com/helix-editor/helix"
        artifact_name: "helix-25.01.1-x86_64-linux.tar.xz"
        bin_path: "helix/helix-25.01.1-x86_64-linux/hx"
      - name: "lazygit"
        version: "v0.52.0"
        github_repo: "https://github.com/jesseduffield/lazygit"
        artifact_name: "lazygit_0.52.0_Linux_x86_64.tar.gz"
      - name: "starship"
        version: "v1.23.0"
        github_repo: "https://github.com/starship/starship"
        artifact_name: "starship-x86_64-unknown-linux-gnu.tar.gz"
      - name: "neovide"
        version: "0.15.0"
        github_repo: "https://github.com/neovide/neovide"
        artifact_name: "neovide-linux-x86_64.tar.gz"
      - name: "eza"
        version: "v0.21.6"
        github_repo: "https://github.com/eza-community/eza"
        artifact_name: "eza_x86_64-unknown-linux-gnu.tar.gz"
  tasks:
    - name: "Create bin folder"
      ansible.builtin.file:
        path: "{{ item }}"
        state: "directory"
      become: true
      loop: "{{ [tools_folder] | product(tools | map(attribute='name')) | map('join', '') }}"

    - name: "Extract tool"
      ansible.builtin.unarchive:
        src: "{{ item.github_repo }}/releases/download/{{ item.version }}/{{ item.artifact_name }}"
        dest: "{{ tools_folder ~ item.name }}"
        remote_src: yes
      become: true
      loop: "{{ tools }}"
      loop_control:
        label: "{{ item.name }} ({{ item.version }})"

    - name: "Create a symbolic link"
      ansible.builtin.file:
        src: "{{ tools_folder ~ ( item.bin_path | default(item.name ~ '/' ~ item.name)) }}"
        dest: "/usr/local/bin/{{ item.name }}"
        state: "link"
      become: true
      loop: "{{ tools }}"
      loop_control:
        label: "{{ tools_folder ~ ( item.bin_path | default(item.name ~ '/' ~ item.name)) }} to /usr/local/bin/{{ item.name }}"

- name: "Install dotfiles"
  hosts: "all"
  tags:
    - "config"
  vars:
    stow_configs:
      - "alacritty"
      - "fish"
      - "nvim"
      - "zellij"
      - "helix"
  tasks:
  - name: "Clone repository to {{ ansible_env.HOME }}"
    ansible.builtin.git:
      repo: "https://github.com/import-benjamin/.dotfiles.git"
      dest: "{{ ansible_env.HOME }}/.dotfiles"
      version: "{{ config_version }}"

  - name: "Fetch {{ ansible_env.HOME }}/.config directories"
    ansible.builtin.stat:
      path: "{{ ansible_env.HOME }}/.config/{{ item }}"
    register: "sym"
    loop: "{{ stow_configs }}"
    loop_control:
      label: "{{ ansible_env.HOME }}/.config/{{ item }}"

  - name: "Update stow configuration"
    ansible.builtin.command: "stow {{ '-R ' if config_dir.stat.islnk is defined and config_dir.stat.islnk }}{{ item }}"
    args:
      chdir: "{{ ansible_env.HOME }}/.dotfiles"
    loop: "{{ stow_configs }}"
    loop_control:
      label: "stow {{ '-R ' if config_dir.stat.islnk is defined and config_dir.stat.islnk }}{{ item }}"
    vars:
      config_dir: "{{ sym.results | selectattr('item', 'equalto', item) | first }}"
