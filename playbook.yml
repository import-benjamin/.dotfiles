---

- name: Install zellij
  hosts: all
  tags:
    - cli
  tasks:
    - name: Check if zellij is installed
      ansible.builtin.shell: command -v zellij
      when: force_install is undefined
      changed_when: false
      register: zellij_exists
      ignore_errors: yes

    - name: create binary folder
      ansible.builtin.file:
        path: /opt/zellij-linux64
        state: directory
      when: force_install is not undefined or zellij_exists is failed
      register: folder_creation
      become: true

    - name: Extract latest zellij release
      become: true
      when: force_install is not undefined or zellij_exists is failed
      ansible.builtin.unarchive:
        src: https://github.com/zellij-org/zellij/releases/download/v0.41.2/zellij-x86_64-unknown-linux-musl.tar.gz
        dest: "{{ folder_creation.path }}"
        remote_src: yes

- name: Install nvim
  hosts: all
  tags:
    - cli
  tasks:
    - name: check if nvim is installed
      ansible.builtin.shell: command -v nvim
      changed_when: false
      when: force_install is undefined
      register: nvim_exists
      ignore_errors: yes

    - name: fetch latest version on github
      when: force_install is not undefined or nvim_exists is failed
      ansible.builtin.uri:
        url: https://api.github.com/repos/neovim/neovim/releases/latest
        method: GET
        return_content: yes
        status_code: 200
        body_format: json
      register: nvim_version
      retries: 3

    - name: Extract latest nvim release
      become: true
      when: force_install is not undefined or nvim_exists is failed
      ansible.builtin.unarchive:
        src: https://github.com/neovim/neovim/releases/download/{{ nvim_version.json.tag_name }}/nvim-linux64.tar.gz
        dest: /opt
        remote_src: yes

- name: Install lazygit
  hosts: all
  tags:
    - cli
  tasks:

    - name: check if lazygit is installed
      ansible.builtin.shell: command -v lazygit
      when: force_install is undefined
      changed_when: false
      register: lazygit_exists
      ignore_errors: yes

    - name: fetch latest version on github
      when: force_install is not undefined or lazygit_exists is failed
      ansible.builtin.uri:
        url: https://api.github.com/repos/jesseduffield/lazygit/releases/latest
        method: GET
        return_content: yes
        status_code: 200
        body_format: json
      register: lazygit_version
      retries: 3

    - name: Create bin folder
      ansible.builtin.file:
        path: /opt/lazygit-linux64
        state: directory
      when: force_install is not undefined or lazygit_exists is failed
      become: true
      register: folder_creation

    - name: "Extract lazygit {{ lazygit_version.json.tag_name }} at {{ folder_creation.path | default('[skipped]')}}"
      when: force_install is not undefined or lazygit_exists is failed
      ansible.builtin.unarchive:
        src: "https://github.com/jesseduffield/lazygit/releases/download/{{ lazygit_version.json.tag_name }}/lazygit_{{ lazygit_version.json.tag_name[1:] }}_Linux_x86_64.tar.gz"
        dest: "{{ folder_creation.path }}"
        remote_src: yes
      become: true

